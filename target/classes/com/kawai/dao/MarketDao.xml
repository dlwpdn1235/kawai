<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kawai.dao.MarketDao">

	<insert id="marketInsert" parameterType="MarketPay">
		insert into market(mTitle,mContent,mIp,mPrice,user_id)
		values(#{mTitle},#{mContent},#{mIp},
		#{mPrice},#{user_id})
	</insert>

	<update id="marketUpdate" parameterType="MarketPay">
		update market set mTitle=#{mTitle} , mContent=#{mContent} , bookInfo_id=#{bookInfo.bookinfo_id} where
		market_id=#{market_id}
	</update>



		<resultMap id="market" type="Market">
		<id property="market_id"         column="market_id" /> <!-- property : MemberVO -->
		<result property="market_id"     column="market_id" /> <!-- column : db컬럼명 -->
		<result property="mTitle"  column="mTitle" />
		<result property="mContent"  column="mContent" />
		<result property="mIp"    column="mIp" />
		<result property="mPrice"   column="mPrice" />
		<result property="mDate"          column="mDate" />
		<result property="user_id" column="user_id" />
 		<association property="bookInfo"     resultMap="commDtoBookinfo" />
 	</resultMap>

	<resultMap id="commDtoBookinfo" type="CommDtoBookinfo">
		<id property="bookinfo_id" column="bookinfo_id" /> <!-- property : MemberVO -->
		<result property="book_title" column="book_title" />
		<result property="book_description" column="book_description" />
		<result property="book_author" column="book_author" />
		<result property="book_publisher" column="book_publisher" />
		<result property="book_image" column="book_image" />
		<result property="book_pubdate" column="book_pubdate" />
	</resultMap>
	
	<select id="marketRead" parameterType="Market" resultMap="market">

		SELECT a.market_id, a.user_id, a.mPrice, a.bookinfo_id, b.book_title, b.book_author, b.book_publisher, b.book_image, b.book_pubdate
		FROM market a
		LEFT JOIN bookinfo b ON a.bookinfo_id = b.bookinfo_id
		WHERE market_id = #{market_id}
	</select>

	<select id="marketList" parameterType="MarketPage"
		resultType="Market">
		select * from market m

		<if test="marketSearch != 0 and marketSearchKeyWord != ''">
			<where>
				<choose>
					<when test="marketSearch == 1">
						m.mTitle = #{marketSearchKeyWord}
					</when>
					<when test="marketSearch == 2">
						inner join bookinfo bi on m.bookinfo_id = bi.bookinfo_id
						and bi.book_title = #{marketSearchKeyWord}
					</when>
					<when test="marketSearch == 3">
						inner join bookinfo bi on m.bookinfo_id = bi.bookinfo_id
						and bi.book_author = #{marketSearchKeyWord}
					</when>
					<when test="marketSearch == 4">
						inner join bookinfo bi on m.bookinfo_id = bi.bookinfo_id
						and bi.book_publisher = #{marketSearchKeyWord}
					</when>
				</choose>

			</where>
		</if>

		<choose>
			<when test="marketOption == 1">
				order by m.mDate desc
			</when>
			<when test="marketOption == 2">
				order by m.mPrice desc
			</when>
			<when test="marketOption == 3">
				order by m.mPrice asc
			</when>
			<otherwise>
				order by m.mDate desc
			</otherwise>
		</choose>
		<choose>
			<when test="marketListCount != 0">
				limit #{marketPageCount},#{marketListCount}
			</when>
			<otherwise>
				limit #{marketPageCount},20
			</otherwise>
		</choose>
	</select>

	<update id="marketCount" parameterType="Market">
		UPDATE mpay AS m JOIN (
		SELECT market_id, SUM(mPrice=#{mPrice}) AS total_price FROM market
		GROUP BY market_id ) AS t ON m.market_id = t.market_id SET m.mPayCount
		= t.total_price;
	</update>

	<delete id="marketDelete" parameterType="Market">
		delete from market where
		market_id =#{market_id}
	</delete>
	
	
</mapper>